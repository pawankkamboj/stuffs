---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipeline-config-syslog
  namespace: kube-system
data:
  logstash.conf: |-
    input {
      beats {
        port => 5046
      }
    }
    filter {
      if [type] == "kube-logs" {

        mutate {
          rename => ["log", "message"]
        }

        date {
          match => ["time", "ISO8601"]
          remove_field => ["time"]
        }

        grok {
          match => { "source" => "/var/log/containers/%{DATA:pod_name}_%{DATA:namespace}_%{GREEDYDATA:container_name}-%{DATA:container_id}.log" }
          remove_field => ["source"]
        }
      }
    }

    filter
    {
      if [fields][clustername] 
      {
        mutate { add_field => { "[@metadata][appname]" => "%{[fields][clustername]}.%{[kubernetes][namespace]}.%{[kubernetes][pod][name]}.%{[kubernetes][container][name]}" }
        }
      } 
    }

    filter {
      if [kubernetes][container][name] == "filebeat"
      {
        drop { }
      }
    }
    output
    {
      tcp
      {
        host => "haproxy.kube-system.svc.cluster.local"
        port => 8000
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-config-syslog
  namespace: kube-system
data:
  logstash.yml: |-
    ## Default Logstash configuration from logstash-docker.
    ## from https://github.com/elastic/logstash-docker/blob/master/build/logstash/config/logstash.yml
    #
    http.host: "0.0.0.0"
    http.port: "9600"
    dead_letter_queue.enable: true
    queue.type: persisted
    config.reload.automatic: true
    log.level: info
    path.config: /usr/share/logstash/pipeline/logstash.conf
    xpack.monitoring.enabled: false

  pipelines.yml: |-
    #   path.dead_letter_queue:

  log4j2.properties: |-
    status = error
    name = LogstashPropertiesConfig

    appender.console.type = Console
    appender.console.name = plain_console
    appender.console.layout.type = PatternLayout
    appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c] %m%n

    appender.json_console.type = Console
    appender.json_console.name = json_console
    appender.json_console.layout.type = JSONLayout
    appender.json_console.layout.compact = true
    appender.json_console.layout.eventEol = true

    rootLogger.level = ${sys:ls.log.level}
    rootLogger.appenderRef.console.ref = ${sys:ls.log.format}_console
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-syslog-np
  labels:
    app: logstash-syslog
  namespace: kube-system
spec:
  type: NodePort
  ports:
    - name: beats
      port: 5046
      protocol: TCP
      nodePort: 5046
      targetPort: beats
  selector:
    app: logstash-syslog

---
apiVersion: v1
kind: Service
metadata:
  name: logstash-syslog
  labels:
    app: logstash-syslog
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: beats
      port: 5046
      protocol: TCP
      targetPort: beats
  selector:
    app: logstash-syslog
---

apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: logstash-syslog
  namespace: kube-system
spec:
  serviceName: logstash-syslog
  replicas: 3
  selector:
    matchLabels:
      app: logstash-syslog
  template:
    metadata:
      labels:
        app: logstash-syslog
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: logstash-syslog
      containers:
      - env:
        - name: LS_JAVA_OPTS
          value: -Xmx3096m -Xms3096m
        image: logstash/logstash:6.4.1
        name: logstash-syslog
        args:
        - -f
        - /usr/share/logstash/pipeline/logstash.conf
        ports:
        - name: monitor
          containerPort: 9600
          protocol: TCP
        - containerPort: 5046
          name: beats
          protocol: TCP
        #livenessProbe:
        #  httpGet:
        #    path: /
        #    port: monitor
        #  initialDelaySeconds: 20
        #readinessProbe:
        #  httpGet:
        #    path: /
        #    port: monitor
        #  initialDelaySeconds: 20
        volumeMounts:
        - mountPath: /usr/share/logstash/data
          name: data-syslog
        - mountPath: /usr/share/logstash/pipeline/
          name: pipeline-config-syslog
        - mountPath: /usr/share/logstash/config/
          name: logstash-config-syslog
      restartPolicy: Always
      volumes:
      - name: pipeline-config-syslog
        configMap:
          name: pipeline-config-syslog
      - name: logstash-config-syslog
        configMap:
          name: logstash-config-syslog
  volumeClaimTemplates:
    - metadata:
        name: data-syslog
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "2Gi"
        storageClassName: "managed-nfs-storage"
